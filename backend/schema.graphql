type Query {
  getNotifications(userId: Int!): [Notification!]!
}

type Mutation {
  createFriendRequest(requesterId: Int!, recipientId: Int!): FriendRequest!
  acceptFriendRequest(requestId: Int!): FriendRequest!
  declineFriendRequest(requestId: Int!): FriendRequest!
  markNotificationAsRead(notificationId: Int!): Notification!
  createStoryNotification(userId: Int!, storyId: Int!): Notification! # New mutation
}

type Notification {
  id: Int!
  userId: Int!
  type: String!
  content: String!
  isRead: Boolean!
  createdAt: String!
  friendRequestId: Int
  storyId: Int # New field
}

type FriendRequest {
  id: Int!
  requesterId: Int!
  recipientId: Int!
  status: String!
}

type User {
  id: Int!
  email: String!
  firstName: String!
  lastName: String!
  connectionCount: Int!
  # Add other fields as needed
}

type Story {
  id: Int!
  userId: Int!
  fileUrl: String!
  createdAt: String!
  expiresAt: String!
}
